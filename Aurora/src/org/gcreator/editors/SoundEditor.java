/*
 * SoundEditor.java
 *
 * Created on 20 de Julho de 2008, 13:45
 */
package org.gcreator.editors;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.gcreator.components.JFileFilter;
import org.gcreator.components.TabPanel;
import org.gcreator.fileclass.Project;
import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.gcreator.extended.GMidiRenderer;
import org.gcreator.extended.GWaveRenderer;
import org.gcreator.fileclass.GFile;
import org.gcreator.fileclass.res.Sound;
import org.gcreator.managers.Registry;
import org.gcreator.units.BeanFile;

/**
 *
 * @author  luis
 */
public class SoundEditor extends TabPanel {

    public byte[] edata = null;
    public boolean changed = false;
    public GWaveRenderer wave = new GWaveRenderer();
    public GMidiRenderer midi = new GMidiRenderer();
    
    /** Creates new form SoundEditor
     */
    public SoundEditor(GFile f, Project unused) {
        this.file = f;
        
        initComponents();
        if (f.value != null) {
            edata = ((Sound) f.value).data;
            jButton4.setEnabled(true);
        } else {
            f.value = new Sound();
        }
        updateComponents();
        jTextField1.setText(file.name);
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void changedUpdate(DocumentEvent evt) {
                perform();
            }

            @Override
            public void removeUpdate(DocumentEvent evt) {
                perform();
            }

            @Override
            public void insertUpdate(DocumentEvent evt) {
                perform();
            }
        });
        perform();
    }

    public void perform() {
        String name = jTextField1.getText();
        if (name.matches("[a-zA-Z_][a-zA-Z_0-9]*")) {
            jTextField1.setBackground(Color.WHITE);
            file.name = name;
            org.gcreator.core.gcreator.panel.workspace.updateUI();
        } else {
            jTextField1.setBackground(Color.RED);
        }
    }

    @Override
    public void dispose() {
        wave.stop();
        midi.stop();
        super.dispose();
    }

    public void updateComponents() {
        if (edata == null) {
            jButton2.setEnabled(false);
            jButton3.setEnabled(false);
        } else {
            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
        }
    }
    Sound snd;

    @Override
    public boolean Save() {
        snd = (Sound) file.value;
        snd.data = edata;
        file.value = snd;
        changed = false;
        return true;
    }

    @Override
    public boolean canSave() {
        return changed;
    }

    @Override
    public boolean wasModified() {
        return changed;
    }
    
    protected void play() {
        wave.stop();
        midi.stop();

        if (edata != null) {
            try {
                if (file.type.equals("mid")) {
                    midi.setVolume(1.0f);
                    midi.play(new ByteArrayInputStream(edata));
                } else if (file.type.equals("wav") || file.type.equals("au")) {
                    wave.setVolume(1.0f);
                    wave.play(new ByteArrayInputStream(edata));
                }
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        }
    }
    
    @Override
    public boolean setModified(boolean a) {
        changed = false;
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        saveResourcePanel1 = new org.gcreator.components.SaveResourcePanel(this);

        jLabel1.setText("Sound: ");

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 0, 13), new java.awt.Color(0, 19, 255)));

        jButton2.setText("Play");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Stop");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Save As...");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(saveResourcePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveResourcePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JFileChooser fc = new JFileChooser((Registry.get("Directories.soundEditor") != null) ? (BeanFile) Registry.get("Directories.soundEditor") : null);
    fc.addChoosableFileFilter(new JFileFilter(".*\\.(wav|mid|au)", "Sound file"));
//    fc.addChoosableFileFilter(new JFileFilter(".*\\..*", "Any file"));
    fc.setApproveButtonText("OK");
    fc.setDialogTitle("Select sound file");
    int res = fc.showDialog(this, null);
    if (res == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null && fc.getSelectedFile().exists()) {
        wave.stop();
        midi.stop();
        File f = fc.getSelectedFile();
        
        file.type = f.getName().substring(f.getName().lastIndexOf('.')+1);
        try {
            FileInputStream streamer = new FileInputStream(f);
            edata = new byte[streamer.available()];
            jButton4.setEnabled(true);
            streamer.read(edata);
            streamer.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        changed = true;
        updateComponents();
        Registry.set("Directories.soundEditor", new BeanFile(fc.getCurrentDirectory()));
    }
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    play();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    wave.stop();
    midi.stop();
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    JFileChooser fc = new JFileChooser((Registry.get("Directories.soundEditorSaveAs") != null) ? (BeanFile) Registry.get("Directories.soundEditorSaveAs") : null);
    File f;
    if (fc.showDialog(this, null) != JFileChooser.APPROVE_OPTION || (f = fc.getSelectedFile()) == null) {
        return;
    }
    BufferedOutputStream out = null;
    if (!f.getName().endsWith(file.type)) {
        f = new File(f.getPath() + file.type);
    }
    if (f.exists() && JOptionPane.showConfirmDialog(this, "File '" + f + "' Exists. Overwrite?") != JOptionPane.OK_OPTION) {
        return;
    }
    
    try {
        out = new BufferedOutputStream(new FileOutputStream(f));
        out.write(edata);
        out.close();
    } catch (FileNotFoundException ex) {
        Logger.getLogger(SoundEditor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(SoundEditor.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            out.close();
        } catch (IOException ex) {
            Logger.getLogger(SoundEditor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    Registry.set("Directories.soundEditorSaveAs", new BeanFile(fc.getCurrentDirectory()));
}//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private org.gcreator.components.SaveResourcePanel saveResourcePanel1;
    // End of variables declaration//GEN-END:variables

}
