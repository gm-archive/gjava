package org.gcreator.editors;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.*;
import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.stream.FileImageInputStream;
import javax.swing.*;
import org.gcreator.components.*;
import org.gcreator.components.jvector.JVectorWindow;
import org.gcreator.fileclass.*;
import org.gcreator.fileclass.res.*;
import org.gcreator.managers.Registry;
import org.gcreator.units.BeanFile;

/**
 *
 * @author  luis
 */
public class ImageEditor extends TabPanel {

    public GImage i;
    public boolean changed;
    public ImagePane pane;
    public String type;
    public Color bgColor = Color.GRAY;
    protected ImageIcon nonTransparentImage;
    
    /** Creates new form ImageEditor2 */
    public ImageEditor(Project p, GFile f) {
        this.project = p;
        this.file = f;
        initComponents();
        i = new GImage();
        if (f.value instanceof ImageIcon) {//powerpack
            GImage img = new GImage();
            img.image = (ImageIcon) file.value;
            file.value = img.image;
        }

        if (f.value == null) {
            i.image = new ImageIcon(new BufferedImage(200, 200, BufferedImage.TYPE_INT_ARGB));
            changed = true;
            i.transparentColor = Color.white;
            i.transparent = true;
            jCheckBox1.setSelected(true);
        } else {
            BufferedImage img = new BufferedImage(((ImageIcon) f.value).getIconWidth(),
                    ((ImageIcon) f.value).getIconHeight(),
                    BufferedImage.TYPE_INT_ARGB);
            //((BufferedImage) ((GImage) f.value).image.getImage()).getType());
            img.getGraphics().drawImage(((ImageIcon) f.value).getImage(), 0, 0,
                    ((ImageIcon) f.value).getImageObserver());
            i.readXml(file.xml);
            i.image = new ImageIcon(img);
            i.transparentColor = Color.white;
            jCheckBox1.setSelected(i.transparent);
        }
        colorSelection1.setBackground(i.transparentColor);
        jTextField1.setText(file.name);

        pane = new ImagePane(this);
        jScrollPane1.setViewportView(pane);
    }

    @Override
    public boolean canSave() {
        return changed;
    }

    @Override
    public boolean wasModified() {
        return changed;
    }

    @Override
    public boolean Save() {
        changed = false;
        file.value = i.getImage();
        return true;
    }
    
    /**
     * Creates Game Maker-like one color transparency.
     * @param i The ImageIcon to create the image from
     * @param c The transparent color.
     * @return An ImageIcon with the given color removed.
     */
    protected static ImageIcon createGMTransparency(ImageIcon i, final Color c) {
        final BufferedImage bufImg = new BufferedImage(i.getIconWidth(), i.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = bufImg.createGraphics();
        g.drawImage(i.getImage(), 0, 0, i.getImageObserver());
        g.dispose();

        ImageFilter filter = new RGBImageFilter() {
            public int filterRGB(int x, int y, int rgb) {
                    if ((rgb | 0xFF000000) == c.getRGB()) {
                        return 0x00FFFFFF & rgb;
                    }
                    return rgb;
                }
            };
        ImageProducer ip = new FilteredImageSource(bufImg.getSource(), filter);
        Image img = Toolkit.getDefaultToolkit().createImage(ip);
        
        //This must be done for the image editor to work.
        BufferedImage buffer = new BufferedImage(i.getIconWidth(), i.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
        g = buffer.createGraphics();
        g.drawImage(img, 0, 0, null);
        g.dispose();
        return new ImageIcon(buffer);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        colorSelection1 = new org.gcreator.components.ColorSelection();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        colorSelection2 = new org.gcreator.components.ColorSelection();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        saveResourcePanel1 = new org.gcreator.components.SaveResourcePanel(this);
        jButton3 = new javax.swing.JButton();
        colorSelection3 = new org.gcreator.components.ColorSelection();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Image"));
        jPanel1.setFocusable(false);

        jButton1.setText(org.gcreator.managers.LangSupporter.activeLang.getEntry(118));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText(org.gcreator.managers.LangSupporter.activeLang.getEntry(119));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, -5, 5, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Transparency"));
        jPanel2.setFocusable(false);

        colorSelection1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        colorSelection1.setToolTipText("Transparent Colour");
        colorSelection1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colorSelection1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout colorSelection1Layout = new javax.swing.GroupLayout(colorSelection1);
        colorSelection1.setLayout(colorSelection1Layout);
        colorSelection1Layout.setHorizontalGroup(
            colorSelection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );
        colorSelection1Layout.setVerticalGroup(
            colorSelection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Transparent");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(colorSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(colorSelection1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit"));
        jPanel3.setFocusable(false);

        colorSelection2.setBackground(new java.awt.Color(1, 1, 1));
        colorSelection2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout colorSelection2Layout = new javax.swing.GroupLayout(colorSelection2);
        colorSelection2.setLayout(colorSelection2Layout);
        colorSelection2Layout.setHorizontalGroup(
            colorSelection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        colorSelection2Layout.setVerticalGroup(
            colorSelection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(255, 0, 255, 10));

        jLabel2.setText("Opacity");

        buttonGroup1.add(jToggleButton1);
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gcreator/resources/imageeditor/Draw_Base.png"))); // NOI18N
        jToggleButton1.setSelected(true);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButton2);
        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gcreator/resources/imageeditor/Draw_Line.png"))); // NOI18N
        jToggleButton2.setSelected(true);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButton3);
        jToggleButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gcreator/resources/imageeditor/Draw_Rect.png"))); // NOI18N
        jToggleButton3.setSelected(true);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButton4);
        jToggleButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gcreator/resources/imageeditor/Fill_Rect.png"))); // NOI18N
        jToggleButton4.setSelected(true);
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButton5);
        jToggleButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gcreator/resources/imageeditor/Select_Linear.png"))); // NOI18N
        jToggleButton5.setSelected(true);
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(colorSelection2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                        .addComponent(jToggleButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(3, 3, 3)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jToggleButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(colorSelection2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton2.setText("Edit with JVector");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gcreator/resources/tree/img.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        colorSelection3.setBackground(java.awt.Color.gray);
        colorSelection3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        colorSelection3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colorSelection3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout colorSelection3Layout = new javax.swing.GroupLayout(colorSelection3);
        colorSelection3.setLayout(colorSelection3Layout);
        colorSelection3Layout.setHorizontalGroup(
            colorSelection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        colorSelection3Layout.setVerticalGroup(
            colorSelection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(saveResourcePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 370, Short.MAX_VALUE)
                .addComponent(colorSelection3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveResourcePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(colorSelection3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
    i.zoom = (Integer) jSpinner1.getValue();
    updateScroll();
}//GEN-LAST:event_jSpinner1StateChanged

private void colorSelection1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorSelection1MouseClicked
    if (colorSelection1.getBackground() == null) {
        return;
    }
    i.transparentColor = colorSelection1.getBackground();
    if (i.transparent) {
        i.transparentImage = createGMTransparency(nonTransparentImage, colorSelection1.getBackground());
    }
    updateScroll();
}//GEN-LAST:event_colorSelection1MouseClicked

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JFileChooser fc = new ImageFileChooser((Registry.exists("Directories.imageEditor")) ? (BeanFile)Registry.get("Directories.imageEditor") : null);
    try {
        fc.resetChoosableFileFilters();
        JFileFilter filter = new JFileFilter(".*\\.gif|.*\\.jpg|.*\\.png", "Image Files (*.png, *.gif, *.jpg)");
        fc.addChoosableFileFilter(filter);
        JFileFilter filter2 = new JFileFilter(".*\\.*", "Any Files (*.*)");
        fc.addChoosableFileFilter(filter2);
        fc.setFileFilter(filter);
        if (fc.showDialog(this, "OK") != JFileChooser.APPROVE_OPTION) {
            return;
        }
        if (fc.getSelectedFile() != null) {
            java.io.File _file = fc.getSelectedFile();
            type = _file.getName().substring(_file.getName().lastIndexOf(".") + 1);
            ImageIcon img = null;
            if (type.toLowerCase().equals("gif")) {
                System.out.println("GIF!");
                //                    boolean animated = false;
                ImageReader reader = ImageIO.getImageReadersByFormatName("gif").next();
                //                    if (reader.getNumImages(true) > 1) {
//                        animated = true;
//                    }
                reader.setInput(new FileImageInputStream(_file));
                System.out.println("No: " + reader.getNumImages(true));
                BufferedImage[] b = new BufferedImage[reader.getNumImages(true)];

                for (int i = 0; i < reader.getNumImages(true); i++) {
                    b[i] = reader.read(i);
                }
                img = new ImageIcon(b[0]);
            //file.treevalue = File.getScaledIcon(new ImageIcon(b[1]));
            } else {
                img = new ImageIcon(ImageIO.read(_file));
            //file.treevalue = File.getScaledIcon((ImageIcon) file.value);
            }
            
            if (jCheckBox1.isSelected() && colorSelection1.getBackground() != null) {
                nonTransparentImage = img;
                img = createGMTransparency(img, colorSelection1.getBackground());
            } else {
                nonTransparentImage = null;
            }
            
            i.image = img;
            org.gcreator.core.gcreator.panel.workspace.updateUI();
            jScrollPane1.updateUI();
        }
    } catch (Exception e) {
    }
    Registry.set("Directories.imageEditor", new BeanFile(fc.getCurrentDirectory()));
    updateScroll();
}//GEN-LAST:event_jButton1ActionPerformed
    public boolean sel5 = false;

private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
    if (sel5) {
        deactivate5();
    }
}//GEN-LAST:event_jToggleButton2ActionPerformed

private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
    if (sel5) {
        deactivate5();
    }
}//GEN-LAST:event_jToggleButton3ActionPerformed

private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
    if (sel5) {
        deactivate5();
    }
}//GEN-LAST:event_jToggleButton4ActionPerformed

private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
    if (sel5) {
        deactivate5(); //First deactivate, then reactivate
    }
    sel5 = true;
}//GEN-LAST:event_jToggleButton5ActionPerformed

private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
    if (sel5) {
        deactivate5();
    }
}//GEN-LAST:event_jToggleButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    new JVectorWindow(ImageEditor.this);
}//GEN-LAST:event_jButton2ActionPerformed

private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    file.name = jTextField1.getText();
    org.gcreator.core.gcreator.panel.workspace.updateUI();
}//GEN-LAST:event_jTextField1ActionPerformed

private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
    file.name = jTextField1.getText();
    org.gcreator.core.gcreator.panel.workspace.updateUI();
}//GEN-LAST:event_jTextField1CaretUpdate

private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    changed = true;
    i.transparent = !i.transparent;
    if (i.image != null) {
        if (jCheckBox1.isSelected() && colorSelection1.getBackground() != null) {
            nonTransparentImage = i.image;
            i.transparentImage = createGMTransparency(nonTransparentImage, colorSelection1.getBackground());
        } else if (!jCheckBox1.isSelected()) {
            i.image = nonTransparentImage;
            nonTransparentImage = null;
            i.transparentImage = null;
        }
        updateScroll();
    }
}//GEN-LAST:event_jCheckBox1ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    final JDialog d = new JDialog() {
            @Override
        public void paint(Graphics g) {
            super.paint(g);
            g.drawImage(i.transparentImage.getImage(), 0, 0, i.transparentImage.getImageObserver());
        }
    };
   // com.sun.jna.examples.WindowUtils.setWindowAlpha(d, 0); - doren't work
    d.setSize(i.image.getIconWidth(), i.image.getIconHeight());
    d.addMouseListener(new MouseAdapter() {
            @Override
        public void mouseClicked(MouseEvent e) {
            d.dispose();
        }
    });
    d.setUndecorated(true);
    d.setModal(true);
    d.setResizable(false);
    d.setLocationRelativeTo(null);
    d.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    d.setVisible(true);
}//GEN-LAST:event_jButton3ActionPerformed

private void colorSelection3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorSelection3MouseClicked
    bgColor = colorSelection3.getBackground();
    pane.repaint();
}//GEN-LAST:event_colorSelection3MouseClicked

    public void deactivate5() {
        sel5 = false;
        pane.mergeSelection();
    }

    public void updateScroll() {
        changed = true;
        pane.repaint();
        pane.updateUI();
        jScrollPane1.updateUI();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private org.gcreator.components.ColorSelection colorSelection1;
    public org.gcreator.components.ColorSelection colorSelection2;
    private org.gcreator.components.ColorSelection colorSelection3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    public javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField1;
    public javax.swing.JToggleButton jToggleButton1;
    public javax.swing.JToggleButton jToggleButton2;
    public javax.swing.JToggleButton jToggleButton3;
    public javax.swing.JToggleButton jToggleButton4;
    public javax.swing.JToggleButton jToggleButton5;
    private org.gcreator.components.SaveResourcePanel saveResourcePanel1;
    // End of variables declaration//GEN-END:variables
}
