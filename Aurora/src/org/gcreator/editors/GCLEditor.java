/*
 * CodeEditor2.java
 *
 * Created on 13 September 2007, 19:21
 */
package org.gcreator.editors;

import org.gcreator.components.scanning.GCLScanner;
import org.gcreator.components.scanning.Scanner;
import org.gcreator.components.SyntaxHighlighter;
import java.util.logging.*;
import javax.swing.text.BadLocationException;
import org.gcreator.components.TabPanel;
import org.gcreator.fileclass.Project;
import java.awt.*;
import java.beans.*;
import javax.swing.*;
import javax.swing.text.html.HTMLEditorKit;
import org.gcreator.api.util.*;
import org.gcreator.fileclass.res.Classes;
import org.gcreator.components.impl.*;

import org.gcreator.managers.LangSupporter;
import publicdomain.*;

/**
 *
 * @author  Ali1
 */
public class GCLEditor extends TabPanel {

    public boolean changed = true;
    private SyntaxHighlighter g;

    public boolean Save() {
        file.value = g.getText();
        if (file.value == null) {
            file.value = "";
        }
        return true;
    }

    /** 
     * Creates new form GCLEditor
     * @param file 
     */
    public GCLEditor(org.gcreator.fileclass.GFile file, Project project) {
        this.file = file;
        this.project = project;
        initComponents();
        jTextField1.setText(file.name);
        if (file.value == null) {
            file.value = new Classes("String examplefield = \"\"; \npublic void exampleFunction(){\n\t\n}");
        }
        Scanner scanner = new GCLScanner();
        g = new SyntaxHighlighter(100, 100, scanner, project);
        g.setText(file.value.toString());

        setLayout(new BorderLayout());
        add(BorderLayout.CENTER, jScrollPane1);
        jScrollPane1.setViewportView(g);
        
        g.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                changed = true;
            }
        });

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                g.requestFocusInWindow();
            }
        });
    }

    public boolean wasModified() {
        return changed;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });

        jLabel1.setText("Name:");
        jLabel1.setText(LangSupporter.activeLang.getEntry(136));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        file.name = jTextField1.getText();
    }//GEN-LAST:event_jTextField1CaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}

class ApiListCellRenderer extends JLabel implements ListCellRenderer {

    public ApiListCellRenderer() {
        setOpaque(true);
    }

    public Component getListCellRendererComponent(JList list,
            Object value,
            int index,
            boolean isSelected,
            boolean cellHasFocus) {
        String val = "";// = value.toString();

        // check if this cell represents the current DnD drop location
        //JList.DropLocation dropLocation = list.getDropLocation();

        if (value instanceof ApiFunction) {
            //  icon = ((org.gcreator.actions.ActionPattern) value).getStandardImage();
            val = ((ApiFunction) value).name;

        } else if (value instanceof ApiClass) {
            // icon = ((org.gcreator.actions.ActionCategory) value).icon;
            val = ((ApiClass) value).name;

        }
        setText(val);
        //setIcon(icon);
        return this;
    }
}
