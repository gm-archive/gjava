/*
 * ActorFieldPane.java
 *
 * Created on July 22, 2008, 3:38 PM
 */
package org.gcreator.components;

import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.gcreator.editors.ActorEditor;
import org.gcreator.fileclass.res.Actor;

/**
 *
 * @author  Serge Humphrey
 */
public final class ActorFieldPane extends javax.swing.JPanel {

    private Actor actor;
    private ActorEditor editor;
    
    /** Creates new form ActorFieldPane */
    public ActorFieldPane() {
        System.err.println("<b>WARNING:</b> Using Bean Constructor");
        initComponents();
    }

    public ActorFieldPane(ActorEditor e) {
        this.editor = e;
        this.actor = e.actor;

        initComponents();

        /*Table*/
        
        // 'Type' column
        TableColumn typeColumn = jTable1.getColumn("Type");
        JComboBox types = new JComboBox(new Object[]{
            new TypeThing(Field.Type.INTERCHANGABLE, "Interchangeable"),
            new TypeThing(Field.Type.INTEGER, "Integer"),
            new TypeThing(Field.Type.DOUBLE, "Double"),
            new TypeThing(Field.Type.BYTE, "Byte"),
            new TypeThing(Field.Type.STRING, "String (Unicode)"),
            new TypeThing(Field.Type.LONG, "Long"),
            new TypeThing(Field.Type.CHAR, "Charachter (Unicode)"),
            new TypeThing(Field.Type.FLOAT, "Float"),
            new TypeThing(Field.Type.SHORT, "Short"),
            new TypeThing(Field.Type.BOOLEAN, "Boolean"),
            new TypeThing(Field.Type.ACTOR, "Actor"),
            new TypeThing(Field.Type.OBJECT, "Generic Object"),
            new TypeThing(Field.Type.JAVA_OBJECT, "Java Object"),
        });
        typeColumn.setCellEditor(new DefaultCellEditor(types));
        jTable1.setRowHeight(20);
        
        for (Field f : actor.fields) {
            ((DefaultTableModel) jTable1.getModel()).addRow(new Object[]{
            f.name, f.type, f.defaultValue, f.isStatic, f.isFinal});
        }
        
        jTable1.getModel().addTableModelListener(new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
                editor.changed = true;
            }
        });
    }
    
    public void save() {
        actor.fields.clear();
        for (Object o : ((DefaultTableModel)jTable1.getModel()).getDataVector()) {
            Vector v = (Vector)o;
            actor.fields.add(new Field((String)v.get(0), ((TypeThing)v.get(1)).type, v.get(2), (Boolean)v.get(3), (Boolean) v.get(4)));
        }
    }
    
    
    @Override
    public void paint(java.awt.Graphics g) {
        super.paint(g);
    }
    
    public static class Field {

        public enum Type {

            INTERCHANGABLE, INTEGER, DOUBLE, BYTE, STRING, LONG,
            CHAR, FLOAT, SHORT, BOOLEAN, ACTOR, OBJECT, JAVA_OBJECT
        }; /*
         *     JAVA_OBJECT: java.lang.Object, or some other kind of thing that 
         *  represents all G-Creator/G-* objects, such as Actor, and 3D Models.
         *  This could be an interface.
         */

        public  String name;
        public  Type type;
        public Object defaultValue;
        public boolean isStatic;   
        public boolean isFinal;
        
        public Field(String name, Type type, Object defaultValue, boolean isStatic, boolean isFinal) {
            this.name = name;
            this.type = type;
            this.defaultValue = defaultValue;
            this.isStatic = isStatic;
            this.isFinal = isFinal;
        }
    }
    
    private class TypeThing {
        public String title;
        public Field.Type type;
        
        public TypeThing(Field.Type type, String title) {
            this.type = type;
            this.title = title;
        }
        
        @Override
        public String toString() {
            return title;
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Default", "Static", "Final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(54, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ((DefaultTableModel) jTable1.getModel()).addRow(new Object[]{
            "field"+actor.fields.size(), new TypeThing(Field.Type.INTERCHANGABLE, "Interchangable"), null, false, false});
        editor.changed = true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable1.getSelectedRow() < 0) {
            return;
        }
        ((DefaultTableModel)jTable1.getModel()).removeRow(jTable1.getSelectedRow());
        editor.changed = true;
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
